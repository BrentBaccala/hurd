diff -ru glibc-2.25/libpthread/sysdeps/generic/pt-cond-destroy.c glibc-2.25.new/libpthread/sysdeps/generic/pt-cond-destroy.c
--- glibc-2.25/libpthread/sysdeps/generic/pt-cond-destroy.c	2018-02-02 15:26:58.000000000 -0500
+++ glibc-2.25.new/libpthread/sysdeps/generic/pt-cond-destroy.c	2017-12-26 12:38:18.000000000 -0500
@@ -23,6 +23,8 @@
 int
 __pthread_cond_destroy (pthread_cond_t *cond)
 {
+  if (cond->__queue != NULL) return EBUSY;
+  while (cond->__waitcount > 0) sched_yield();
   return 0;
 }
 
diff -ru glibc-2.25/libpthread/sysdeps/generic/pt-cond-timedwait.c glibc-2.25.new/libpthread/sysdeps/generic/pt-cond-timedwait.c
--- glibc-2.25/libpthread/sysdeps/generic/pt-cond-timedwait.c	2018-02-02 15:26:58.000000000 -0500
+++ glibc-2.25.new/libpthread/sysdeps/generic/pt-cond-timedwait.c	2017-12-26 12:38:18.000000000 -0500
@@ -111,6 +111,7 @@
       __pthread_enqueue (&cond->__queue, self);
       if (cond->__attr)
 	clock_id = cond->__attr->__clock;
+      cond->__waitcount ++;
       __pthread_spin_unlock (&cond->__lock);
     }
   __pthread_mutex_unlock (&self->cancel_lock);
@@ -153,6 +154,7 @@
       __pthread_dequeue (self);
       drain = 0;
     }
+  cond->__waitcount --;
   __pthread_spin_unlock (&cond->__lock);
 
   if (drain)
diff -ru glibc-2.25/libpthread/sysdeps/pthread/bits/condition.h glibc-2.25.new/libpthread/sysdeps/pthread/bits/condition.h
--- glibc-2.25/libpthread/sysdeps/pthread/bits/condition.h	2018-02-02 15:26:58.000000000 -0500
+++ glibc-2.25.new/libpthread/sysdeps/pthread/bits/condition.h	2017-12-27 11:15:31.000000000 -0500
@@ -29,11 +29,11 @@
     struct __pthread *__queue;
     struct __pthread_condattr *__attr;
     struct __pthread_condimpl *__impl;
-    void *__data;
+    int __waitcount;
   };
 
 /* Initializer for a condition variable.  */
 #define __PTHREAD_COND_INITIALIZER \
-  { __PTHREAD_SPIN_LOCK_INITIALIZER, NULL, NULL, NULL, NULL }
+  { __PTHREAD_SPIN_LOCK_INITIALIZER, NULL, NULL, NULL, 0 }
 
 #endif /* bits/condition.h */
