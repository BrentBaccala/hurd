%%
%% Package "hurd" - tikz commands to draw task boxes to illustrate Mach IPC concepts
%%
%% Written by Brent Baccala (2018)
%%
%% \task - takes four arguments
%% 1. name of task (used to refer to it from tikz; maybe printed as a label as well)
%% 2. location of task box's center point
%% 3. "r" or "l", indicating if a set of tick marks representing
%%    ports should drawn on the left or right side of the task box
%%    "u" to label the task "Task" instead of labeling it with its name
%%    "b" to make a "big" node (I wish I knew how to size the tick marks automatically)
%%    "s" to make a "small" node
%% 4. contents of the task box - other nodes
%%
%% The tick marks will be named "#1 Port #" for future reference
%%
%% It's implemented as a tikz matrix with two cells - the task name in the top cell
%% and everything else in the bottom cell
%%
%% \queue - draw a box with vertical lines to represent a message queue
%% arg 1 is the name of a port to position it to the left of
%% arg 2 is name to be given the box
%%
%% Defaults styles named "task" and "queue" are used to draw these objects

\ProvidesPackage{hurd}

\RequirePackage{tikz}
\RequirePackage{xstring}

\usetikzlibrary{patterns}

\tikzstyle{task} = [draw, fill=blue!20, rounded corners]

\tikzstyle{queue} = [draw, rectangle, minimum width=1.8cm, minimum height=1cm, pattern=vertical lines]

\newcommand\task[4]{
\matrix (#1) [task, inner xsep=0] at (#2) { \node {\IfSubStr{#3}{u}{Task}{#1}}; \\ #4

% print port tick marks in fill color if they are disabled, in order to make
% them expand out the dimensions of the task box yet remain invisible

\IfSubStr{#3}{b}{\edef\starti{-20}}{\IfSubStr{#3}{s}{\edef\starti{-1}}{\edef\starti{-7}}}
\IfSubStr{#3}{s}{\edef\endi{1}}{\edef\endi{7}}

\foreach \i in {\starti,...,\endi}
{
  \IfSubStr{#3}{l}{\edef\leftcolor{black}\edef\leftcoord{coordinate (#1 Port \i)}}
                  {\edef\leftcolor{blue!20}\edef\leftcoord{}}
  \IfSubStr{#3}{r}{\edef\rightcolor{black}\edef\rightcoord{coordinate (#1 Port \i)}}
                  {\edef\rightcolor{blue!20}\edef\rightcoord{}}
  \draw[xshift=-5em, ultra thick, color=\leftcolor] (0,0.2 * \i) \leftcoord -- (0.2,0.2 * \i);
  \draw[xshift=5em, ultra thick, color=\rightcolor] (-0.2,0.2 * \i) -- (0,0.2 * \i) \rightcoord;
}

\\};
}

\newcommand\queue[2]{
\filldraw (#1) +(-3.1,0) node[queue, name=#2] {};
}

\endinput
